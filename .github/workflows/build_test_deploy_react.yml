name: Build, Test an Deply React Application

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    permissions: # Job-level permissions configuration starts here
      contents: write # 'write' access to repository contents
      pull-requests: write # 'write' access to pull requests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci and test
        run: |
          cd ./app
          npm ci
          npm test
      - name: Build and docs
        run: |
          cd ./app
          npm run jsdoc
          npm run build --if-present
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # Set up and test Docker containers (Node.js and MongoDB)
      - name: Docker compose up nodejs mongo
        run: |
          docker-compose -f docker-compose-node.yml up -d
          sleep 10
          docker ps
      - name: Run e2e tests with cypress
        run: |
          cd ./app
          npm run e2e:chrome
      - name: Docker compose down nodejs mongo
        run: |
          docker-compose -f docker-compose-node.yml down

      # Set up and test Docker containers (Python and MySql)
      - name: Docker compose up python mysql
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 10
          docker ps
      - name: Run e2e tests with cypress
        run: |
          cd ./app
          npm run e2e:chrome
      - name: Docker compose down python mysql
        run: |
          docker-compose -f docker-compose.yml down
