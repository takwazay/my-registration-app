name: Build, Test and Deploy React Application

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 21.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set Git Identity
        run: |
          git config --global user.email "zayenetakwa@gmail.com"
          git config --global user.name "takwazay"
      - name: npm ci, build and test
        run: |
          npm ci
          npm run build --if-present
          npm test  
      - name: Install JSDoc
        run: npm install -g jsdoc
      - name: Generate JSDoc
        run: npm run jsdoc   
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: build
          if-no-files-found: error
      - name: Upload documentation as artifact
        uses:  actions/upload-pages-artifact@v2
        with:
          name: documentation
          path: public/docs
          if-no-files-found: error
      - name: Update build version
        run: |
          # Récupérer l'ID du workflow, le numéro d'exécution et le nombre de tentatives
          run_id=${{ github.run_id }}
          run_number=${{ github.run_number }}
          run_attempt=${{ github.run_attempt }}
      
          # Construire la nouvelle version en fonction des informations extraites
          new_version="0.${run_number}.${run_attempt}-build+${run_id}"
      
          # Ajouter le nouveau tag de version dans le dépôt Git
          git tag $new_version
          # Définir la nouvelle version dans le fichier package.json
          npm version from-git --allow-same-version

# Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      
      # to deploy to Pages
      id-token: write   
      # to verify the deployment originates from an appropriate source

    # Add a dependency to the build job
    needs: build_test
    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name : Deploy docs to GitHub Pages
        uses: actions/download-artifact@v2

